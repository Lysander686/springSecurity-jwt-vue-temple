<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.security.mapper.RoleMapper">

    <select id="getRoleListByCond" resultType="com.example.security.entity.Role">
        select *
        from Role
        order by id desc
    </select>

    <resultMap id="PerResultMap" type="com.example.security.entity.Role">
        <id column="id" property="id"/>
        <result column="rolename" property="rolename"/>
        <collection property="permissions" ofType="Permission">
            <id column="per_id" property="per_id"/>
            <result column="per_name" property="per_name"/>
            <result column="per_resource" property="per_resource"/>
            <result column="per_describe" property="per_describe"/>
            <result column="per_parent_id" property="per_parent_id"/>
            <result column="per_type" property="per_type"/>
            <result column="per_sort" property="per_sort"/>
            <result column="per_icon" property="per_icon"/>
            <result column="per_component" property="per_component"/>
            <result column="per_crtTime" property="per_crtTime"/>
        </collection>
    </resultMap>

    <select id="selectByUserName" parameterType="String" resultMap="PerResultMap">
        select Role.id,
               Role.rolename,
               Permission.per_id,
               Permission.per_name,
               Permission.per_resource,
               Permission.per_describe,
               Permission.per_parent_id,
               Permission.per_type,
               Permission.per_sort,
               Permission.per_icon,
               Permission.per_component,
               Permission.per_crtTime
        from User
                 LEFT JOIN RoleUser ru on ru.userId = `User`.id
                 LEFT JOIN Role on Role.id = ru.roleId
                 LEFT JOIN RolePermission on RolePermission.rp_role_id = Role.id
                 LEFT JOIN Permission on Permission.per_id = RolePermission.rp_per_id
        where `User`.username = #{username}
        order by Permission.per_sort asc
    </select>

    <select id="getMenuTree" parameterType="map" resultType="com.example.security.entity.Permission">
        select Permission.per_id,
               Permission.per_name,
               Permission.per_resource,
               Permission.per_describe,
               Permission.per_parent_id,
               Permission.per_type,
               Permission.per_sort,
               Permission.per_icon,
               Permission.per_component,
               Permission.per_crtTime
        from Permission
        order by Permission.per_sort asc
    </select>

    <select id="getAllRoleList" resultType="com.example.security.entity.Role">
        select *
        from Role
    </select>

    <select id="getRoleListByPerId" resultType="com.example.security.entity.Role">
        select *
        from Role
        where id in (select RolePermission.rp_role_id from RolePermission where RolePermission.rp_per_id = #{rp_per_id})
    </select>

    <insert id="add">
        insert into Role (id, rolename, roledesc, createTime)
        values (#{id}, #{rolename}, #{roledesc}, #{createTime})
    </insert>

    <delete id="del">
        delete
        from Role
        where id = #{id}
    </delete>

    <update id="update">
        update Role
        <set>
            <if test="rolename != null">rolename=#{rolename},</if>
            <if test="roledesc != null">roledesc=#{roledesc},</if>
            <if test="createTime != null">createTime=#{createTime},</if>
        </set>
        where id=#{id}
    </update>

</mapper>